-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public."AUTHOR"
(
    author_key serial NOT NULL,
    _profile serial,
    joined_at date,
    PRIMARY KEY (author_key)
);

CREATE TABLE IF NOT EXISTS public."CUSTOMER"
(
    customer_key serial NOT NULL,
    _profile serial,
    joined_at date,
    PRIMARY KEY (customer_key)
);

CREATE TABLE IF NOT EXISTS public."LOCATION"
(
    location_key serial NOT NULL,
    country character varying(64) NOT NULL DEFAULT '',
    state character varying(64) NOT NULL DEFAULT '',
    city character varying(64) NOT NULL DEFAULT '',
    street character varying(64) NOT NULL DEFAULT '',
    PRIMARY KEY (location_key)
);

CREATE TABLE IF NOT EXISTS public."PROFILE"
(
    profile_key serial NOT NULL,
    full_name character varying(64) NOT NULL DEFAULT '',
    nickname character varying(64) NOT NULL DEFAULT '',
    profession character varying(64) NOT NULL DEFAULT '',
    date_born date NOT NULL,
    date_death date NOT NULL,
    gender character varying(8) NOT NULL DEFAULT 'Male',
    _contact serial,
    _birth_place serial,
    _address serial,
    PRIMARY KEY (profile_key)
);

CREATE TABLE IF NOT EXISTS public."PUBLISHER"
(
    publisher_key serial NOT NULL,
    _location serial,
    _contact serial,
    year_founded integer NOT NULL DEFAULT 0,
    PRIMARY KEY (publisher_key)
);

CREATE TABLE IF NOT EXISTS public."CONTACT"
(
    contact_key serial NOT NULL,
    phone character varying(64),
    email character varying(64),
    website character varying(64),
    instagram character varying(64),
    whatsapp character varying(64),
    line character varying(64),
    PRIMARY KEY (contact_key)
);

CREATE TABLE IF NOT EXISTS public."BOOK"
(
    book_key serial NOT NULL,
    name character varying(64) NOT NULL DEFAULT '',
    publication_year integer NOT NULL DEFAULT 0,
    pages integer NOT NULL DEFAULT 0,
    main_price integer NOT NULL DEFAULT 0,
    PRIMARY KEY (book_key)
);

CREATE TABLE IF NOT EXISTS public."BOOK_BOUGHT_CUSTOMER"
(
    _book serial,
    _customer serial,
    date date NOT NULL,
    price integer NOT NULL DEFAULT 0,
    quantity integer NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS public."BOOK_WRITTEN_AUTHOR"
(
    _book serial,
    _author serial
);

CREATE TABLE IF NOT EXISTS public."FRANCHISE"
(
    franchise_key serial NOT NULL,
    _owner serial,
    _location serial,
    _distributor serial,
    name character varying(64),
    PRIMARY KEY (franchise_key)
);

CREATE TABLE IF NOT EXISTS public."TRANSACTION"
(
    transaction_key serial NOT NULL,
    _discount serial,
    _franchise serial,
    _customer serial,
    "timestamp" timestamp without time zone,
    PRIMARY KEY (transaction_key)
);

CREATE TABLE IF NOT EXISTS public."DISCOUNT"
(
    discount_key serial NOT NULL,
    code character varying(16) NOT NULL DEFAULT '',
    value double precision,
    expire date,
    PRIMARY KEY (discount_key)
);

CREATE TABLE IF NOT EXISTS public."EMPLOYEE"
(
    employee_key serial NOT NULL,
    _profile serial,
    _position serial,
    recruited_at date,
    PRIMARY KEY (employee_key)
);

CREATE TABLE IF NOT EXISTS public."POSITION"
(
    position_key serial NOT NULL,
    title character varying(64),
    salary integer,
    PRIMARY KEY (position_key)
);

CREATE TABLE IF NOT EXISTS public."DISTRIBUTOR"
(
    distributor_key serial NOT NULL,
    name character varying(64) NOT NULL DEFAULT '',
    local_price integer NOT NULL DEFAULT 0,
    PRIMARY KEY (distributor_key)
);

CREATE TABLE IF NOT EXISTS public."CUSTOMER_WISHLIST_BOOK"
(
    _customer serial,
    _book serial
);

ALTER TABLE IF EXISTS public."AUTHOR"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CUSTOMER"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_contact)
    REFERENCES public."CONTACT" (contact_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_birth_place)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_address)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PUBLISHER"
    ADD FOREIGN KEY (_location)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PUBLISHER"
    ADD FOREIGN KEY (_contact)
    REFERENCES public."CONTACT" (contact_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BOOK_BOUGHT_CUSTOMER"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BOOK_BOUGHT_CUSTOMER"
    ADD FOREIGN KEY (_customer)
    REFERENCES public."CUSTOMER" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BOOK_WRITTEN_AUTHOR"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BOOK_WRITTEN_AUTHOR"
    ADD FOREIGN KEY (_author)
    REFERENCES public."AUTHOR" (author_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_owner)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_location)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_distributor)
    REFERENCES public."DISTRIBUTOR" (distributor_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_discount)
    REFERENCES public."DISCOUNT" (discount_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_franchise)
    REFERENCES public."FRANCHISE" (franchise_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_customer)
    REFERENCES public."CUSTOMER" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY (_position)
    REFERENCES public."POSITION" (position_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CUSTOMER_WISHLIST_BOOK"
    ADD FOREIGN KEY (_customer)
    REFERENCES public."CUSTOMER" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CUSTOMER_WISHLIST_BOOK"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;