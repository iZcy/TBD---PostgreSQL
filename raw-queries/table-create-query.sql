-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."AUTHOR"
(
    author_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _profile uuid NOT NULL,
    joined_at date,
    PRIMARY KEY (author_key)
);

CREATE TABLE IF NOT EXISTS public."CUSTOMER"
(
    customer_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _profile uuid NOT NULL,
    joined_at date,
    PRIMARY KEY (customer_key)
);

CREATE TABLE IF NOT EXISTS public."LOCATION"
(
    location_key uuid NOT NULL DEFAULT gen_random_uuid(),
    country character varying(64) NOT NULL DEFAULT '',
    state character varying(64) NOT NULL DEFAULT '',
    city character varying(64) NOT NULL DEFAULT '',
    street character varying(64) NOT NULL DEFAULT '',
    PRIMARY KEY (location_key)
);

CREATE TABLE IF NOT EXISTS public."PROFILE"
(
    profile_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _contact uuid NOT NULL,
    _birth_place uuid NOT NULL,
    _address uuid NOT NULL,
    full_name character varying(64) NOT NULL DEFAULT '',
    nickname character varying(64) NOT NULL DEFAULT '',
    profession character varying(64) NOT NULL DEFAULT '',
    date_born date NOT NULL,
    date_death date,
    gender character varying(8) NOT NULL DEFAULT 'Male',
    PRIMARY KEY (profile_key)
);

CREATE TABLE IF NOT EXISTS public."PUBLISHER"
(
    publisher_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _location uuid NOT NULL,
    _contact uuid NOT NULL,
    year_founded integer NOT NULL DEFAULT 0,
    PRIMARY KEY (publisher_key)
);

CREATE TABLE IF NOT EXISTS public."CONTACT"
(
    contact_key uuid NOT NULL DEFAULT gen_random_uuid(),
    phone character varying(64),
    email character varying(64),
    website character varying(64),
    instagram character varying(64),
    whatsapp character varying(64),
    line character varying(64),
    PRIMARY KEY (contact_key)
);

CREATE TABLE IF NOT EXISTS public."BOOK"
(
    book_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _publisher uuid NOT NULL,
    name character varying(64) NOT NULL DEFAULT '',
    publication_year integer NOT NULL DEFAULT 0,
    pages integer NOT NULL DEFAULT 0,
    price integer NOT NULL DEFAULT 0,
    PRIMARY KEY (book_key)
);

CREATE TABLE IF NOT EXISTS public."TRANSACTION"
(
    _transaction_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _stock uuid NOT NULL,
    _customer uuid NOT NULL,
    _discount uuid,
    _employee uuid NOT NULL,
    "timestamp" timestamp without time zone NOT NULL,
    PRIMARY KEY (_transaction_key)
);

CREATE TABLE IF NOT EXISTS public."WRITTINGS"
(
    _book uuid NOT NULL,
    _author uuid NOT NULL
);

CREATE TABLE IF NOT EXISTS public."FRANCHISE"
(
    franchise_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _owner uuid NOT NULL,
    _location uuid NOT NULL,
    _distributor uuid NOT NULL,
    name character varying(64),
    PRIMARY KEY (franchise_key)
);

CREATE TABLE IF NOT EXISTS public."DISCOUNT"
(
    discount_key uuid NOT NULL DEFAULT gen_random_uuid(),
    code character varying(16) NOT NULL DEFAULT '',
    value double precision,
    expire date,
    PRIMARY KEY (discount_key)
);

CREATE TABLE IF NOT EXISTS public."EMPLOYEE"
(
    employee_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _profile uuid NOT NULL,
    _position uuid NOT NULL,
    _franchise uuid NOT NULL,
    recruited_at date,
    PRIMARY KEY (employee_key)
);

CREATE TABLE IF NOT EXISTS public."POSITION"
(
    position_key uuid NOT NULL DEFAULT gen_random_uuid(),
    title character varying(64),
    salary integer,
    PRIMARY KEY (position_key)
);

CREATE TABLE IF NOT EXISTS public."DISTRIBUTOR"
(
    distributor_key uuid NOT NULL DEFAULT gen_random_uuid(),
    name character varying(64) NOT NULL DEFAULT '',
    local_price integer NOT NULL DEFAULT 0,
    PRIMARY KEY (distributor_key)
);

CREATE TABLE IF NOT EXISTS public."WISHLIST"
(
    _customer uuid NOT NULL,
    _book uuid NOT NULL
);

CREATE TABLE IF NOT EXISTS public."STOCK"
(
    stock_key uuid NOT NULL DEFAULT gen_random_uuid(),
    _book uuid NOT NULL,
    _franchise uuid NOT NULL,
    PRIMARY KEY (stock_key)
        INCLUDE(stock_key)
);

ALTER TABLE IF EXISTS public."AUTHOR"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."CUSTOMER"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_contact)
    REFERENCES public."CONTACT" (contact_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_address)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROFILE"
    ADD FOREIGN KEY (_birth_place)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PUBLISHER"
    ADD FOREIGN KEY (_location)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PUBLISHER"
    ADD FOREIGN KEY (_contact)
    REFERENCES public."CONTACT" (contact_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."BOOK"
    ADD FOREIGN KEY (_publisher)
    REFERENCES public."PUBLISHER" (publisher_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_stock)
    REFERENCES public."STOCK" (stock_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_customer)
    REFERENCES public."CUSTOMER" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_discount)
    REFERENCES public."DISCOUNT" (discount_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TRANSACTION"
    ADD FOREIGN KEY (_employee)
    REFERENCES public."EMPLOYEE" (employee_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."WRITTINGS"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."WRITTINGS"
    ADD FOREIGN KEY (_author)
    REFERENCES public."AUTHOR" (author_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_owner)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_location)
    REFERENCES public."LOCATION" (location_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."FRANCHISE"
    ADD FOREIGN KEY (_distributor)
    REFERENCES public."DISTRIBUTOR" (distributor_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY (_profile)
    REFERENCES public."PROFILE" (profile_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY (_position)
    REFERENCES public."POSITION" (position_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD FOREIGN KEY (_franchise)
    REFERENCES public."FRANCHISE" (franchise_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."WISHLIST"
    ADD FOREIGN KEY (_customer)
    REFERENCES public."CUSTOMER" (customer_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."WISHLIST"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STOCK"
    ADD FOREIGN KEY (_book)
    REFERENCES public."BOOK" (book_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."STOCK"
    ADD FOREIGN KEY (_franchise)
    REFERENCES public."FRANCHISE" (franchise_key) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;